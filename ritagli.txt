        /*
                public TimeSpan Add(PathParseModel model)
                {
                    DateTime start = DateTime.Now;
                    if (model.Nodes.Count > 0)
                        using (SQLiteTransaction tran = cnn.BeginTransaction())
                        {
                            using (SQLiteCommand cmdFile = cnn.CreateCommand())
                            {
                                cmdFile.Transaction = tran;
                                cmdFile.CommandText = @"
                                insert into FileProps (id, path, artist, title, album, file_tags, duration)
                                values (@id, @path, @artist, @title, @album, @file_tags, @duration);
                            ";
                                SQLiteParameter file_id = new SQLiteParameter("@id");
                                SQLiteParameter file_path = new SQLiteParameter("@path");
                                SQLiteParameter file_artist = new SQLiteParameter("@artist");
                                SQLiteParameter file_title = new SQLiteParameter("@title");
                                SQLiteParameter file_album = new SQLiteParameter("@album");
                                SQLiteParameter file_tags = new SQLiteParameter("@file_tags");
                                SQLiteParameter file_duration = new SQLiteParameter("@duration");
                                cmdFile.Parameters.Add(file_id);
                                cmdFile.Parameters.Add(file_path);
                                cmdFile.Parameters.Add(file_artist);
                                cmdFile.Parameters.Add(file_title);
                                cmdFile.Parameters.Add(file_album);
                                cmdFile.Parameters.Add(file_tags);
                                cmdFile.Parameters.Add(file_duration);


                                using (SQLiteCommand cmd = cnn.CreateCommand())
                                {
                                    cmd.Transaction = tran;
                                    cmd.CommandText = @"
                                        insert into Items (name, parent, size, note, creation_date) VALUES (@name, @parent, @size, @note, @creation_date);
                                        SELECT last_insert_rowid() AS [NodeID];
                                    ";

                                    SQLiteParameter name = new SQLiteParameter("@name");
                                    cmd.Parameters.Add(name);
                                    SQLiteParameter parent = new SQLiteParameter("@parent");
                                    cmd.Parameters.Add(parent);
                                    SQLiteParameter size = new SQLiteParameter("@size");
                                    cmd.Parameters.Add(size);
                                    SQLiteParameter note = new SQLiteParameter("@note");
                                    cmd.Parameters.Add(note);
                                    SQLiteParameter creation_date = new SQLiteParameter("@creation_date");
                                    cmd.Parameters.Add(creation_date);

                                    long id;
                                    DateTime now = DateTime.Now;
                                    List<BaseItem> nodeList = new List<BaseItem>();
                                    nodeList.Add((BaseItem)model.Nodes[0]);
                                    while (nodeList.Count > 0)
                                    {
                                        BaseItem item = nodeList[0];
                                        nodeList.RemoveAt(0);

                                        name.Value = item.Name;
                                        parent.Value = (item.ParentItem == null) ? 0 : item.ParentItem.SqlId;
                                        size.Value = item.Size;
                                        note.Value = null;
                                        creation_date.Value = now;

                                        id = Convert.ToInt64(cmd.ExecuteScalar());
                                        item.SqlId = id;
                                        if (item is FileItem)
                                        {
                                            file_id.Value = id;
                                            file_path.Value = item.Path;
                                            file_title.Value = item.Title;
                                            file_album.Value = item.Album;
                                            file_artist.Value = item.Artist;
                                            file_duration.Value = item.Duration;
                                            file_tags.Value = null;

                                            cmdFile.ExecuteNonQuery();
                                        }

                                        foreach (BaseItem child in item.Nodes)
                                            nodeList.Add(child);
                                    }
                                }
                            }
                            tran.Commit();
                            this.Modified = true;
                        }
                    DateTime end = DateTime.Now;
                    return end - start;
                }
         * */
         
              public void addSupportToModel(Int64 supportID, PathParseModel model)
        //add a support to a PathParseModel - from DB to treefiles
        {
            DateTime start = DateTime.Now;
            /*
            using (SQLiteTransaction tran = cnn.BeginTransaction())
            {
                List<BaseItem> parentToAdd = new List<BaseItem>();    // keep a list of nodes to add
                using (SQLiteCommand cmdRoot = cnn.CreateCommand())
                {
                    cmdRoot.Transaction = tran;
                    cmdRoot.CommandText = @"select id, name, size from items where id=?;";   // seleziono la radice
                    SQLiteParameter idRoot = new SQLiteParameter();
                    cmdRoot.Parameters.Add(idRoot);
                    idRoot.Value = supportID;
                    SQLiteDataReader reader = cmdRoot.ExecuteReader();
                    if (!reader.Read())
                    {
                        // id not found
                        MessageBox.Show("Something was wrong the support doesn't appear on the DB anymore.",
                            "Opps!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        reader.Close();
                        return;
                    }
                    FolderItem root = new FolderItem("", null, model);  // nei folderitem non devo mettere le dimensioni
                    root.SqlId = reader.GetInt64(0);
                    root.Name = reader.GetString(1);
                    root.Size = reader.GetInt64(2);
                    model.Nodes.Add(root);
                    reader.Close();
                    parentToAdd.Add(root);
                    //model.Nodes.Add( 
                    //cmd.CommandText = "SELECT
                }

                using (SQLiteCommand cmdNodes = cnn.CreateCommand())
                {
                    cmdNodes.Transaction = tran;    // find all childs
                    cmdNodes.CommandText = @"
                                    select items.id, items.name, items.size, fileprops.path, fileprops.id as fid, fileprops.artist, fileprops.title, fileprops.album, fileprops.duration
                                    from items left join fileprops on items.id=fileprops.id where parent=?
                        ";
                    SQLiteParameter parentId = new SQLiteParameter();
                    cmdNodes.Parameters.Add(parentId);

                    while (parentToAdd.Count > 0)
                    {
                        BaseItem parent = parentToAdd[0];
                        parentToAdd.RemoveAt(0);

                        parentId.Value = parent.SqlId;

                        SQLiteDataReader reader = cmdNodes.ExecuteReader();
                        while (reader.Read())
                        {
                            BaseItem newNode;
                            if (!reader["fid"].Equals(DBNull.Value))
                            {
                                newNode = new FileItem();
                                newNode.Path = reader["path"] as string;
                                newNode.Icon = Win32.GetSmallAssociatedIcon(newNode.Path).ToBitmap();
                                newNode.Artist = reader["artist"] as string;
                            }
                            else
                            {
                                newNode = new FolderItem();
                                newNode.Path = System.IO.Path.Combine(parent.Path, reader["name"] as string);
                            }
                            newNode.Name = reader["name"] as string;
                            newNode.Size = Convert.ToInt64(reader["size"]);
                            newNode.SqlId = Convert.ToInt64(reader["id"]);

                            parent.Nodes.Add(newNode);
                            parentToAdd.Add(newNode);
                        }
                        reader.Close();
                    }
                }
            }   // end transaction
             * */
            DateTime end = DateTime.Now;
            if (this.log != null) this.log(string.Format("DB to tree in {0}s.", (end - start).TotalSeconds));
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        ************ copystring costruita
        using (SQLiteCommand cmd = cnn.CreateCommand())
            {
                cmd.CommandText = String.Format(@" SELECT name from {0}.sqlite_master where type=?; ", dbSource);
                cmd.Parameters.Add(new SQLiteParameter());
                cmd.Parameters[0].Value = "table";

                SQLiteDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    string tableName = reader.GetString(0) as string;
                    // HACK: copiando tutto
                    if (IsKnownTable(tableName))
                    {
                        copyString += String.Format(@"
                                            INSERT INTO {1}.[{2}] SELECT * from {0}.[{2}];
                                        ", dbSource, dbTarget, tableName);
                        //MessageBox.Show("copio " + tableName);
                    }
                    else
                    {
                        //MessageBox.Show("Skippo " + tableName);
                    }
                }
                reader.Close();
            }